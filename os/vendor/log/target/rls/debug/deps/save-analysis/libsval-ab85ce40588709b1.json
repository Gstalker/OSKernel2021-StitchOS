{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5","program":"/home/gstalker/.rustup/toolchains/nightly-2021-01-30-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sval","--edition=2018","/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"derive\"","--cfg","feature=\"sval_derive\"","-C","metadata=ab85ce40588709b1","-C","extra-filename=-ab85ce40588709b1","--out-dir","/home/gstalker/Desktop/k210OS/os/vendor/log/target/rls/debug/deps","-L","dependency=/home/gstalker/Desktop/k210OS/os/vendor/log/target/rls/debug/deps","--extern","sval_derive=/home/gstalker/Desktop/k210OS/os/vendor/log/target/rls/debug/deps/libsval_derive-6b27c963dfd8a732.so","--cap-lints","allow","--error-format=json","--sysroot","/home/gstalker/.rustup/toolchains/nightly-2021-01-30-x86_64-unknown-linux-gnu"],"output":"/home/gstalker/Desktop/k210OS/os/vendor/log/target/rls/debug/deps/libsval-ab85ce40588709b1.rmeta"},"prelude":{"crate_id":{"name":"sval","disambiguator":[10201626787198169605,14585177122251025631]},"crate_root":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src","external_crates":[{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}},{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","num":4,"id":{"name":"sval_derive","disambiguator":[14582367057318051604,93778011308811892]}}],"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":0,"byte_end":6873,"line_start":1,"line_end":325,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":5425,"byte_end":5426,"line_start":255,"line_end":255,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":29694,"byte_end":29700,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":212},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":29711,"byte_end":29720,"line_start":212,"line_end":212,"column_start":10,"column_end":19},"alias_span":null,"name":"Arguments","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":29743,"byte_end":29754,"line_start":214,"line_end":214,"column_start":9,"column_end":20},"alias_span":null,"name":"OwnedStream","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":29764,"byte_end":29776,"line_start":215,"line_end":215,"column_start":9,"column_end":21},"alias_span":null,"name":"RefMutStream","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":640},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":29796,"byte_end":29801,"line_start":217,"line_end":217,"column_start":12,"column_end":17},"alias_span":null,"name":"Stack","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/mod.rs","byte_start":92874,"byte_end":92886,"line_start":129,"line_end":129,"column_start":24,"column_end":36},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":541}},{"kind":"Use","ref_id":{"krate":0,"index":12},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":6480,"byte_end":6485,"line_start":308,"line_end":308,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":0,"byte_end":6873,"line_start":1,"line_end":325,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":47},{"krate":0,"index":198},{"krate":0,"index":541},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612}],"decl_id":null,"docs":"A small, no-std, object-safe, serialization-only framework.","sig":null,"attributes":[{"value":"*\nA small, no-std, object-safe, serialization-only framework.\n\nThe `sval` API is built around two key traits:\n\n- [`Value`] is a trait for data with a streamable structure. It's like `serde::Serialize`.\n- [`Stream`] is a trait for receiving the structure of a value. It's like `serde::Serializer`.\n\n# Getting started\n\nAdd `sval` to your `Cargo.toml`:\n\n```toml,ignore\n[dependencies.sval]\nversion = \"1.0.0-alpha.5\"\n```\n\n# Supported formats\n\n- [JSON](https://crates.io/crates/sval_json), the ubiquitous JavaScript Object Notation used by many HTTP APIs.\n\n# Streaming values\n\nThe structure of a [`Value`] can be streamed to a [`Stream`].\n\n## in a single call\n\nFor simple use-cases, use the [`stream`](function.stream.html) function to stream the structure of a value:\n\n```no_run\n# #[cfg(not(feature = \"std\"))]\n# fn main() {}\n# #[cfg(feature = \"std\")]\n# fn main() -> Result<(), Box<dyn std::error::Error>> {\nsval::stream(MyStream, 42)?;\n# Ok(())\n# }\n# use sval::stream::{self, Stream};\n# struct MyStream;\n# impl Stream for MyStream {\n#     fn fmt(&mut self, _: stream::Arguments) -> stream::Result { unimplemented!() }\n# }\n```\n\nwhere `42` is a [`Value`] and `MyStream` is a [`Stream`].\n\n## over multiple calls\n\nMore involved use-cases may want to build up structure over time. Use a [`stream::OwnedStream`](stream/struct.OwnedStream.html)\nto hang on to a stream and pass it values over time.\n\nThe following example wraps up a stream in an API that lets callers treat it like a map:\n\n```no_run\n# #[cfg(not(feature = \"std\"))]\n# fn main() {}\n# #[cfg(feature = \"std\")]\n# fn main() -> Result<(), Box<dyn std::error::Error>> {\n# let my_stream = MyStream;\n// Create a `Map` stream that wraps up another one\nlet mut stream = Map::new(my_stream)?;\n\n// Stream it some entries\nstream.entry(\"a\", 42)?;\nstream.entry(\"b\", 17)?;\n\n// Eventually we end the wrapper and return the original stream\nlet my_stream = stream.end()?;\n# struct MyStream;\n# struct Map;\n# impl Map {\n#     fn new<T>(_: T) -> Result<Self, Box<dyn std::error::Error>> { Ok(Map) }\n#     fn entry<K, V>(&mut self, _: K, _: V) -> Result<(), Box<dyn std::error::Error>> { Ok(()) }\n#     fn end(self) -> Result<(), Box<dyn std::error::Error>> { Ok(()) }\n# }\n# Ok(())\n}\n```\n\nAn implementation of `Map` could then look like this:\n\n```no_run\nuse sval::{\n    value::Value,\n    stream::{self, OwnedStream},\n};\n\nstruct Map {\n    // Using `OwnedStream<MyStream>` instead of just `MyStream`\n    // gives us better ergonomics and validation\n    stream: OwnedStream<MyStream>,\n}\n\nimpl Map {\n    fn new(stream: MyStream) -> Result<Self, sval::Error> {\n        let mut stream = OwnedStream::new(stream);\n        stream.map_begin(None)?;\n\n        Ok(Map {\n            stream,\n        })\n    }\n\n    fn entry(&mut self, k: impl Value, v: impl Value) -> Result<(), sval::Error> {\n        self.stream.map_key(k)?;\n        self.stream.map_value(v)?;\n\n        Ok(())\n    }\n\n    fn end(mut self) -> Result<MyStream, sval::Error> {\n        self.stream.map_end()?;\n\n        Ok(self.stream.into_inner())\n    }\n}\n# use sval::stream::Stream;\n# struct MyStream;\n# impl Stream for MyStream {\n#     fn fmt(&mut self, _: stream::Arguments) -> stream::Result { unimplemented!() }\n# }\n```\n\n# `serde` integration\n\nUse the `serde` Cargo feature to enable integration with `serde`:\n\n```toml,ignore\n[dependencies.sval]\nfeatures = [\"serde\"]\n```\n\nWhen `serde` is available, the `Value` trait can also be derived\nbased on an existing `Serialize` implementation:\n\n```ignore\n#[macro_use]\nextern crate sval;\n\n#[derive(Serialize, Value)]\n#[sval(derive_from = \"serde\")]\npub enum Data {\n    Variant(i32, String),\n}\n# }\n```\n\n# `std::fmt` integration\n\nUse the `fmt` Cargo feature to enable extended integration with `std::fmt`:\n\n```toml,ignore\n[dependencies.sval]\nfeatures = [\"fmt\"]\n```\n\nWhen `fmt` is available, arbitrary `Value`s can be treated like `std::fmt::Debug`:\n\n```\n# fn main() {}\n# #[cfg(feature = \"fmt\")]\n# mod test {\n# use sval::value::Value;\nfn with_value(value: impl Value) {\n    dbg!(sval::fmt::to_debug(&value));\n\n    // Do something with the value\n}\n# }\n```\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":0,"byte_end":4077,"line_start":1,"line_end":171,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":4141,"byte_end":4151,"line_start":174,"line_end":174,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/derive.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"derive","qualname":"::derive","value":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/derive.rs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":5268,"byte_end":5294,"line_start":249,"line_end":249,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":12},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8110,"byte_end":8115,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":"An error encountered while visiting a value.","sig":null,"attributes":[{"value":"*\nAn error encountered while visiting a value.\n\n# Converting an `Error` into a standard error\n\nThe `Error` type doesn't implement the `std::error::Error` trait directly.\nWhen `std` is available, the `into_error` method will convert an\n`Error` into a value that implements `std::error::Error`.\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":7801,"byte_end":8098,"line_start":12,"line_end":20,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8217,"byte_end":8220,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"pub fn msg(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Capture a static message as an error. \n","sig":null,"attributes":[{"value":"* Capture a static message as an error. */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8147,"byte_end":8191,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8196,"byte_end":8205,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8371,"byte_end":8382,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"unsupported","qualname":"<Error>::unsupported","value":"pub fn unsupported(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Declare some structure as unsupported. \n","sig":null,"attributes":[{"value":"* Declare some structure as unsupported. */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8300,"byte_end":8345,"line_start":30,"line_end":30,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8350,"byte_end":8359,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8621,"byte_end":8635,"line_start":40,"line_end":40,"column_start":12,"column_end":26},"name":"is_unsupported","qualname":"<Error>::is_unsupported","value":"pub fn is_unsupported(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether or not an error is because some operation was unsupported. \n","sig":null,"attributes":[{"value":"* Whether or not an error is because some operation was unsupported. */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8536,"byte_end":8609,"line_start":39,"line_end":39,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":9276,"byte_end":9290,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"into_fmt_error","qualname":"<Error>::into_fmt_error","value":"pub fn into_fmt_error(Self) -> fmt::Error","parent":null,"children":[],"decl_id":null,"docs":" Convert into a `fmt::Error` \n","sig":null,"attributes":[{"value":"* Convert into a `fmt::Error` */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":9216,"byte_end":9250,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":9255,"byte_end":9264,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":198},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":210},{"krate":0,"index":249},{"krate":0,"index":386},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":519},{"krate":0,"index":540}],"decl_id":null,"docs":"A stream for datastructures.","sig":null,"attributes":[{"value":"*\nA stream for datastructures.\n\n# The `Stream` trait\n\nA [`Stream`] is a type that receives and works with abstract data-structures.\n\n## Streams without state\n\nImplement the `Stream` trait to visit the structure of a [`Value`]:\n\n```\nuse sval::stream::{self, Stream};\n\nstruct Fmt;\n\nimpl Stream for Fmt {\n    fn fmt(&mut self, v: stream::Arguments) -> stream::Result {\n        println!(\"{}\", v);\n\n        Ok(())\n    }\n\n    fn i128(&mut self, v: i128) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&v))\n    }\n\n    fn u128(&mut self, v: u128) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&v))\n    }\n\n    fn f64(&mut self, v: f64) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&v))\n    }\n\n    fn bool(&mut self, v: bool) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&v))\n    }\n\n    fn str(&mut self, v: &str) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&v))\n    }\n\n    fn none(&mut self) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&()))\n    }\n}\n```\n\nA `Stream` might only care about a single kind of value.\nThe following example overrides the provided `u64` method\nto see whether a given value is a `u64`:\n\n```\nuse sval::{\n    value::Value,\n    stream::{self, Stream, OwnedStream},\n};\n\nassert!(is_u64(42u64));\n\npub fn is_u64(v: impl Value) -> bool {\n    OwnedStream::stream(IsU64(None), v)\n        .map(|is_u64| is_u64.0.is_some())\n        .unwrap_or(false)\n}\n\nstruct IsU64(Option<u64>);\nimpl Stream for IsU64 {\n    fn u64(&mut self, v: u64) -> stream::Result {\n        self.0 = Some(v);\n\n        Ok(())\n    }\n}\n```\n\n## Streams with state\n\nThere are more methods on `Stream` that can be overriden for more complex\ndatastructures like sequences and maps. The following example uses a\n[`stream::Stack`] to track the state of any sequences and maps and ensure\nthey're valid:\n\n```\nuse std::{fmt, mem};\nuse sval::stream::{self, stack, Stream, Stack};\n\nstruct Fmt {\n    stack: stream::Stack,\n    delim: &'static str,\n}\n\nimpl Fmt {\n    fn next_delim(pos: stack::Pos) -> &'static str {\n        if pos.is_key() {\n            return \": \";\n        }\n\n        if pos.is_value() || pos.is_elem() {\n            return \", \";\n        }\n\n        return \"\";\n    }\n}\n\nimpl Stream for Fmt {\n    fn fmt(&mut self, v: stream::Arguments) -> stream::Result {\n        let pos = self.stack.primitive()?;\n\n        let delim = mem::replace(&mut self.delim, Self::next_delim(pos));\n        print!(\"{}{:?}\", delim, v);\n\n        Ok(())\n    }\n\n    fn i128(&mut self, v: i128) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&v))\n    }\n\n    fn u128(&mut self, v: u128) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&v))\n    }\n\n    fn f64(&mut self, v: f64) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&v))\n    }\n\n    fn bool(&mut self, v: bool) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&v))\n    }\n\n    fn str(&mut self, v: &str) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&v))\n    }\n\n    fn none(&mut self) -> stream::Result {\n        self.fmt(stream::Arguments::debug(&()))\n    }\n\n    fn seq_begin(&mut self, _: Option<usize>) -> stream::Result {\n        self.stack.seq_begin()?;\n\n        let delim = mem::replace(&mut self.delim, \"\");\n        print!(\"{}[\", delim);\n\n        Ok(())\n    }\n\n    fn seq_elem(&mut self) -> stream::Result {\n        self.stack.seq_elem()?;\n\n        Ok(())\n    }\n\n    fn seq_end(&mut self) -> stream::Result {\n        let pos = self.stack.seq_end()?;\n\n        self.delim = Self::next_delim(pos);\n        print!(\"]\");\n\n        Ok(())\n    }\n\n    fn map_begin(&mut self, _: Option<usize>) -> stream::Result {\n        self.stack.map_begin()?;\n\n        let delim = mem::replace(&mut self.delim, \"\");\n        print!(\"{}{{\", delim);\n\n        Ok(())\n    }\n\n    fn map_key(&mut self) -> stream::Result {\n        self.stack.map_key()?;\n\n        Ok(())\n    }\n\n    fn map_value(&mut self) -> stream::Result {\n        self.stack.map_value()?;\n\n        Ok(())\n    }\n\n    fn map_end(&mut self) -> stream::Result {\n        let pos = self.stack.map_end()?;\n\n        self.delim = Self::next_delim(pos);\n        print!(\"}}\");\n\n        Ok(())\n    }\n}\n```\n\nBy default, the `Stack` type has a fixed depth. That means deeply nested\nstructures aren't supported. See the [`stream::Stack`] type for more details.\n\n[`Value`]: ../value/trait.Value.html\n[`stream::Stack`]: stack/struct.Stack.html\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":25155,"byte_end":29607,"line_start":1,"line_end":203,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":201},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/error.rs","byte_start":42492,"byte_end":42498,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Source","qualname":"::stream::error::Source","value":"Source {  }","parent":null,"children":[{"krate":0,"index":203}],"decl_id":null,"docs":"A streamable error.","sig":null,"attributes":[{"value":"*\nA streamable error.\n\nThis type shouldn't be confused with [`sval::Error`](../../struct.Error.html), which is\nused to communicate errors back to callers.\nThe purpose of the `Source` type is to let streams serialize\nerror types, that may have backtraces and other metadata.\n\n`Source`s can only be created when the `std` feature is available,\nbut streams can still work with them by formatting them or passing\nthem along even in no-std environments where the `Error` trait isn't available.\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/error.rs","byte_start":41987,"byte_end":42480,"line_start":3,"line_end":14,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":212},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":45465,"byte_end":45474,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"Arguments","qualname":"::stream::fmt::Arguments","value":"","parent":null,"children":[],"decl_id":null,"docs":"A formattable value.\n","sig":null,"attributes":[{"value":"*\nA formattable value.\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":45426,"byte_end":45453,"line_start":3,"line_end":5,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":45970,"byte_end":45973,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Arguments>::new","value":"pub fn new(fmt::Arguments) -> Self","parent":null,"children":[],"decl_id":null,"docs":"    Capture standard format arguments.","sig":null,"attributes":[{"value":"*\n    Capture standard format arguments.\n\n    Prefer the [`debug`](#method.debug) and [`display`](#method.display) methods to create\n    `Arguments` over passing them through `format_args`,\n    because `format_args` will clobber any flags a stream\n    might want to format these arguments with.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":45655,"byte_end":45958,"line_start":15,"line_end":22,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46130,"byte_end":46135,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"debug","qualname":"<Arguments>::debug","value":"pub fn debug<impl fmt::Debug: fmt::Debug>(&'a impl fmt::Debug) -> Self","parent":null,"children":[],"decl_id":null,"docs":"    Capture arguments from a debuggable value.\n","sig":null,"attributes":[{"value":"*\n    Capture arguments from a debuggable value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46061,"byte_end":46118,"line_start":27,"line_end":29,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46295,"byte_end":46302,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"display","qualname":"<Arguments>::display","value":"pub fn display<impl fmt::Display: fmt::Display>(&'a impl fmt::Display) -> Self","parent":null,"children":[],"decl_id":null,"docs":"    Capture arguments from a displayable value.\n","sig":null,"attributes":[{"value":"*\n    Capture arguments from a displayable value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46225,"byte_end":46283,"line_start":34,"line_end":36,"column_start":5,"column_end":7}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":47939,"byte_end":47950,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"OwnedStream","qualname":"::stream::owned::OwnedStream","value":"","parent":null,"children":[],"decl_id":null,"docs":"An owned stream wrapper.","sig":null,"attributes":[{"value":"*\nAn owned stream wrapper.\n\n`OwnedStream` is an ergonomic wrapper over a raw [`Stream`] that makes it\neasier to stream complex types.\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":47789,"byte_end":47927,"line_start":21,"line_end":26,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48097,"byte_end":48103,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"stream","qualname":"<OwnedStream<S>>::stream","value":"pub fn stream<impl Value: Value>(S, impl Value) -> Result<S, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Stream a value.\n","sig":null,"attributes":[{"value":"*\n    Stream a value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48041,"byte_end":48071,"line_start":33,"line_end":35,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48076,"byte_end":48085,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48341,"byte_end":48344,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<OwnedStream<S>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"    Begin an owned stream.\n","sig":null,"attributes":[{"value":"*\n    Begin an owned stream.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48278,"byte_end":48315,"line_start":43,"line_end":45,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48320,"byte_end":48329,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48507,"byte_end":48517,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OwnedStream<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"    Unwrap the inner stream.\n","sig":null,"attributes":[{"value":"*\n    Unwrap the inner stream.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48442,"byte_end":48481,"line_start":51,"line_end":53,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48486,"byte_end":48495,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48671,"byte_end":48681,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"borrow_mut","qualname":"<OwnedStream<S>>::borrow_mut","value":"pub fn borrow_mut(&mut Self) -> RefMutStream","parent":null,"children":[],"decl_id":null,"docs":"    Get a reference to the stream that can be used by a value.\n","sig":null,"attributes":[{"value":"*\n    Get a reference to the stream that can be used by a value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48572,"byte_end":48645,"line_start":59,"line_end":61,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48650,"byte_end":48659,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48820,"byte_end":48823,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"any","qualname":"<OwnedStream<S>>::any","value":"pub fn any<impl Value: Value>(&mut Self, impl Value) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a value.\n","sig":null,"attributes":[{"value":"*\n    Stream a value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48764,"byte_end":48794,"line_start":67,"line_end":69,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48799,"byte_end":48808,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48969,"byte_end":48974,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"debug","qualname":"<OwnedStream<S>>::debug","value":"pub fn debug<impl Debug: Debug>(&mut Self, impl Debug) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a debuggable type.\n","sig":null,"attributes":[{"value":"*\n    Stream a debuggable type.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48903,"byte_end":48943,"line_start":75,"line_end":77,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":48948,"byte_end":48957,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":49124,"byte_end":49131,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"display","qualname":"<OwnedStream<S>>::display","value":"pub fn display<impl Display: Display>(&mut Self, impl Display)\n-> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a displayable type.\n","sig":null,"attributes":[{"value":"*\n    Stream a displayable type.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":49057,"byte_end":49098,"line_start":83,"line_end":85,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":49103,"byte_end":49112,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50050,"byte_end":50053,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"i64","qualname":"<OwnedStream<S>>::i64","value":"pub fn i64(&mut Self, i64) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a signed integer.\n","sig":null,"attributes":[{"value":"*\n    Stream a signed integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":49985,"byte_end":50024,"line_start":122,"line_end":124,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50029,"byte_end":50038,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50194,"byte_end":50197,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"u64","qualname":"<OwnedStream<S>>::u64","value":"pub fn u64(&mut Self, u64) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream an unsigned integer.\n","sig":null,"attributes":[{"value":"*\n    Stream an unsigned integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50126,"byte_end":50168,"line_start":130,"line_end":132,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50173,"byte_end":50182,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50343,"byte_end":50347,"line_start":142,"line_end":142,"column_start":12,"column_end":16},"name":"i128","qualname":"<OwnedStream<S>>::i128","value":"pub fn i128(&mut Self, i128) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a 128-bit signed integer.\n","sig":null,"attributes":[{"value":"*\n    Stream a 128-bit signed integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50270,"byte_end":50317,"line_start":138,"line_end":140,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50322,"byte_end":50331,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50497,"byte_end":50501,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"u128","qualname":"<OwnedStream<S>>::u128","value":"pub fn u128(&mut Self, u128) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a 128-bit unsigned integer.\n","sig":null,"attributes":[{"value":"*\n    Stream a 128-bit unsigned integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50422,"byte_end":50471,"line_start":146,"line_end":148,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50476,"byte_end":50485,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50647,"byte_end":50650,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"f64","qualname":"<OwnedStream<S>>::f64","value":"pub fn f64(&mut Self, f64) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a floating point value.\n","sig":null,"attributes":[{"value":"*\n    Stream a floating point value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50576,"byte_end":50621,"line_start":154,"line_end":156,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50626,"byte_end":50635,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50781,"byte_end":50785,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"bool","qualname":"<OwnedStream<S>>::bool","value":"pub fn bool(&mut Self, bool) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a boolean.\n","sig":null,"attributes":[{"value":"*\n    Stream a boolean.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50723,"byte_end":50755,"line_start":162,"line_end":164,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50760,"byte_end":50769,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50928,"byte_end":50932,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"char","qualname":"<OwnedStream<S>>::char","value":"pub fn char(&mut Self, char) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a unicode character.\n","sig":null,"attributes":[{"value":"*\n    Stream a unicode character.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50860,"byte_end":50902,"line_start":170,"line_end":172,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":50907,"byte_end":50916,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51069,"byte_end":51072,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"str","qualname":"<OwnedStream<S>>::str","value":"pub fn str(&mut Self, &str) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a UTF8 string.\n","sig":null,"attributes":[{"value":"*\n    Stream a UTF8 string.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51007,"byte_end":51043,"line_start":178,"line_end":180,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51048,"byte_end":51057,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51209,"byte_end":51213,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"none","qualname":"<OwnedStream<S>>::none","value":"pub fn none(&mut Self) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream an empty value.\n","sig":null,"attributes":[{"value":"*\n    Stream an empty value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51146,"byte_end":51183,"line_start":186,"line_end":188,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51188,"byte_end":51197,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51331,"byte_end":51340,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"map_begin","qualname":"<OwnedStream<S>>::map_begin","value":"pub fn map_begin(&mut Self, Option<usize>) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Begin a map.\n","sig":null,"attributes":[{"value":"*\n    Begin a map.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51278,"byte_end":51305,"line_start":194,"line_end":196,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51310,"byte_end":51319,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51491,"byte_end":51498,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"map_key","qualname":"<OwnedStream<S>>::map_key","value":"pub fn map_key<impl Value: Value>(&mut Self, impl Value) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a map key.\n","sig":null,"attributes":[{"value":"*\n    Stream a map key.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51433,"byte_end":51465,"line_start":202,"line_end":204,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51470,"byte_end":51479,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51642,"byte_end":51651,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"map_value","qualname":"<OwnedStream<S>>::map_value","value":"pub fn map_value<impl Value: Value>(&mut Self, impl Value) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a map value.\n","sig":null,"attributes":[{"value":"*\n    Stream a map value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51582,"byte_end":51616,"line_start":210,"line_end":212,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51621,"byte_end":51630,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51788,"byte_end":51795,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"map_end","qualname":"<OwnedStream<S>>::map_end","value":"pub fn map_end(&mut Self) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    End a map.\n","sig":null,"attributes":[{"value":"*\n    End a map.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51737,"byte_end":51762,"line_start":218,"line_end":220,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51767,"byte_end":51776,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51921,"byte_end":51930,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"seq_begin","qualname":"<OwnedStream<S>>::seq_begin","value":"pub fn seq_begin(&mut Self, Option<usize>) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Begin a sequence.\n","sig":null,"attributes":[{"value":"*\n    Begin a sequence.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51863,"byte_end":51895,"line_start":226,"line_end":228,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":51900,"byte_end":51909,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52090,"byte_end":52098,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"seq_elem","qualname":"<OwnedStream<S>>::seq_elem","value":"pub fn seq_elem<impl Value: Value>(&mut Self, impl Value) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a sequence element.\n","sig":null,"attributes":[{"value":"*\n    Stream a sequence element.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52023,"byte_end":52064,"line_start":234,"line_end":236,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52069,"byte_end":52078,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52239,"byte_end":52246,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"seq_end","qualname":"<OwnedStream<S>>::seq_end","value":"pub fn seq_end(&mut Self) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    End a sequence.\n","sig":null,"attributes":[{"value":"*\n    End a sequence.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52183,"byte_end":52213,"line_start":242,"line_end":244,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52218,"byte_end":52227,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52419,"byte_end":52432,"line_start":259,"line_end":259,"column_start":12,"column_end":25},"name":"map_key_begin","qualname":"<OwnedStream<S>>::map_key_begin","value":"pub fn map_key_begin(&mut Self) -> Result<&mut Self, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a map key.\n","sig":null,"attributes":[{"value":"*\n    Begin a map key.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52362,"byte_end":52393,"line_start":255,"line_end":257,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52398,"byte_end":52407,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52602,"byte_end":52617,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"map_value_begin","qualname":"<OwnedStream<S>>::map_value_begin","value":"pub fn map_value_begin(&mut Self) -> Result<&mut Self, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a map value.\n","sig":null,"attributes":[{"value":"*\n    Begin a map value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52543,"byte_end":52576,"line_start":265,"line_end":267,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52581,"byte_end":52590,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52796,"byte_end":52810,"line_start":279,"line_end":279,"column_start":12,"column_end":26},"name":"seq_elem_begin","qualname":"<OwnedStream<S>>::seq_elem_begin","value":"pub fn seq_elem_begin(&mut Self) -> Result<&mut Self, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a sequence element.\n","sig":null,"attributes":[{"value":"*\n    Begin a sequence element.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52730,"byte_end":52770,"line_start":275,"line_end":277,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52775,"byte_end":52784,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":54859,"byte_end":54871,"line_start":386,"line_end":386,"column_start":12,"column_end":24},"name":"RefMutStream","qualname":"::stream::owned::RefMutStream","value":"","parent":null,"children":[],"decl_id":null,"docs":"A borrowed stream wrapper.","sig":null,"attributes":[{"value":"*\nA borrowed stream wrapper.\n\nThis is the result of calling `OwnedStream.borrow_mut`.\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":54757,"byte_end":54847,"line_start":381,"line_end":385,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":55096,"byte_end":55099,"line_start":398,"line_end":398,"column_start":12,"column_end":15},"name":"any","qualname":"<RefMutStream>::any","value":"pub fn any<impl Value: Value>(&mut Self, impl Value) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a value.\n","sig":null,"attributes":[{"value":"*\n    Stream a value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":55040,"byte_end":55070,"line_start":394,"line_end":396,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":55075,"byte_end":55084,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":55245,"byte_end":55250,"line_start":406,"line_end":406,"column_start":12,"column_end":17},"name":"debug","qualname":"<RefMutStream>::debug","value":"pub fn debug<impl Debug: Debug>(&mut Self, impl Debug) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a debuggable type.\n","sig":null,"attributes":[{"value":"*\n    Stream a debuggable type.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":55179,"byte_end":55219,"line_start":402,"line_end":404,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":55224,"byte_end":55233,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":55399,"byte_end":55406,"line_start":414,"line_end":414,"column_start":12,"column_end":19},"name":"display","qualname":"<RefMutStream>::display","value":"pub fn display<impl Display: Display>(&mut Self, impl Display)\n-> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a displayable type.\n","sig":null,"attributes":[{"value":"*\n    Stream a displayable type.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":55332,"byte_end":55373,"line_start":410,"line_end":412,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":55378,"byte_end":55387,"line_start":413,"line_end":413,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56324,"byte_end":56327,"line_start":453,"line_end":453,"column_start":12,"column_end":15},"name":"i64","qualname":"<RefMutStream>::i64","value":"pub fn i64(&mut Self, i64) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a signed integer.\n","sig":null,"attributes":[{"value":"*\n    Stream a signed integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56259,"byte_end":56298,"line_start":449,"line_end":451,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56303,"byte_end":56312,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56468,"byte_end":56471,"line_start":461,"line_end":461,"column_start":12,"column_end":15},"name":"u64","qualname":"<RefMutStream>::u64","value":"pub fn u64(&mut Self, u64) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream an unsigned integer.\n","sig":null,"attributes":[{"value":"*\n    Stream an unsigned integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56400,"byte_end":56442,"line_start":457,"line_end":459,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56447,"byte_end":56456,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56617,"byte_end":56621,"line_start":469,"line_end":469,"column_start":12,"column_end":16},"name":"i128","qualname":"<RefMutStream>::i128","value":"pub fn i128(&mut Self, i128) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a 128-bit signed integer.\n","sig":null,"attributes":[{"value":"*\n    Stream a 128-bit signed integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56544,"byte_end":56591,"line_start":465,"line_end":467,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56596,"byte_end":56605,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56771,"byte_end":56775,"line_start":477,"line_end":477,"column_start":12,"column_end":16},"name":"u128","qualname":"<RefMutStream>::u128","value":"pub fn u128(&mut Self, u128) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a 128-bit unsigned integer.\n","sig":null,"attributes":[{"value":"*\n    Stream a 128-bit unsigned integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56696,"byte_end":56745,"line_start":473,"line_end":475,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56750,"byte_end":56759,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56921,"byte_end":56924,"line_start":485,"line_end":485,"column_start":12,"column_end":15},"name":"f64","qualname":"<RefMutStream>::f64","value":"pub fn f64(&mut Self, f64) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a floating point value.\n","sig":null,"attributes":[{"value":"*\n    Stream a floating point value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56850,"byte_end":56895,"line_start":481,"line_end":483,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56900,"byte_end":56909,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57055,"byte_end":57059,"line_start":493,"line_end":493,"column_start":12,"column_end":16},"name":"bool","qualname":"<RefMutStream>::bool","value":"pub fn bool(&mut Self, bool) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a boolean.\n","sig":null,"attributes":[{"value":"*\n    Stream a boolean.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":56997,"byte_end":57029,"line_start":489,"line_end":491,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57034,"byte_end":57043,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57202,"byte_end":57206,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"char","qualname":"<RefMutStream>::char","value":"pub fn char(&mut Self, char) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a unicode character.\n","sig":null,"attributes":[{"value":"*\n    Stream a unicode character.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57134,"byte_end":57176,"line_start":497,"line_end":499,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57181,"byte_end":57190,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57343,"byte_end":57346,"line_start":509,"line_end":509,"column_start":12,"column_end":15},"name":"str","qualname":"<RefMutStream>::str","value":"pub fn str(&mut Self, &str) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a UTF8 string.\n","sig":null,"attributes":[{"value":"*\n    Stream a UTF8 string.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57281,"byte_end":57317,"line_start":505,"line_end":507,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57322,"byte_end":57331,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57483,"byte_end":57487,"line_start":517,"line_end":517,"column_start":12,"column_end":16},"name":"none","qualname":"<RefMutStream>::none","value":"pub fn none(&mut Self) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream an empty value.\n","sig":null,"attributes":[{"value":"*\n    Stream an empty value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57420,"byte_end":57457,"line_start":513,"line_end":515,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57462,"byte_end":57471,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57605,"byte_end":57614,"line_start":525,"line_end":525,"column_start":12,"column_end":21},"name":"map_begin","qualname":"<RefMutStream>::map_begin","value":"pub fn map_begin(&mut Self, Option<usize>) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Begin a map.\n","sig":null,"attributes":[{"value":"*\n    Begin a map.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57552,"byte_end":57579,"line_start":521,"line_end":523,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57584,"byte_end":57593,"line_start":524,"line_end":524,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57765,"byte_end":57772,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"map_key","qualname":"<RefMutStream>::map_key","value":"pub fn map_key<impl Value: Value>(&mut Self, impl Value) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a map key.\n","sig":null,"attributes":[{"value":"*\n    Stream a map key.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57707,"byte_end":57739,"line_start":529,"line_end":531,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57744,"byte_end":57753,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57916,"byte_end":57925,"line_start":541,"line_end":541,"column_start":12,"column_end":21},"name":"map_value","qualname":"<RefMutStream>::map_value","value":"pub fn map_value<impl Value: Value>(&mut Self, impl Value) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a map value.\n","sig":null,"attributes":[{"value":"*\n    Stream a map value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57856,"byte_end":57890,"line_start":537,"line_end":539,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":57895,"byte_end":57904,"line_start":540,"line_end":540,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58062,"byte_end":58069,"line_start":549,"line_end":549,"column_start":12,"column_end":19},"name":"map_end","qualname":"<RefMutStream>::map_end","value":"pub fn map_end(&mut Self) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    End a map.\n","sig":null,"attributes":[{"value":"*\n    End a map.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58011,"byte_end":58036,"line_start":545,"line_end":547,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58041,"byte_end":58050,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58195,"byte_end":58204,"line_start":557,"line_end":557,"column_start":12,"column_end":21},"name":"seq_begin","qualname":"<RefMutStream>::seq_begin","value":"pub fn seq_begin(&mut Self, Option<usize>) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Begin a sequence.\n","sig":null,"attributes":[{"value":"*\n    Begin a sequence.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58137,"byte_end":58169,"line_start":553,"line_end":555,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58174,"byte_end":58183,"line_start":556,"line_end":556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58364,"byte_end":58372,"line_start":565,"line_end":565,"column_start":12,"column_end":20},"name":"seq_elem","qualname":"<RefMutStream>::seq_elem","value":"pub fn seq_elem<impl Value: Value>(&mut Self, impl Value) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    Stream a sequence element.\n","sig":null,"attributes":[{"value":"*\n    Stream a sequence element.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58297,"byte_end":58338,"line_start":561,"line_end":563,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58343,"byte_end":58352,"line_start":564,"line_end":564,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58513,"byte_end":58520,"line_start":573,"line_end":573,"column_start":12,"column_end":19},"name":"seq_end","qualname":"<RefMutStream>::seq_end","value":"pub fn seq_end(&mut Self) -> stream::Result","parent":null,"children":[],"decl_id":null,"docs":"    End a sequence.\n","sig":null,"attributes":[{"value":"*\n    End a sequence.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58457,"byte_end":58487,"line_start":569,"line_end":571,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58492,"byte_end":58501,"line_start":572,"line_end":572,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58675,"byte_end":58688,"line_start":583,"line_end":583,"column_start":12,"column_end":25},"name":"map_key_begin","qualname":"<RefMutStream>::map_key_begin","value":"pub fn map_key_begin(&mut Self) -> Result<&mut Self, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a map key.\n","sig":null,"attributes":[{"value":"*\n    Begin a map key.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58618,"byte_end":58649,"line_start":579,"line_end":581,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58654,"byte_end":58663,"line_start":582,"line_end":582,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58858,"byte_end":58873,"line_start":593,"line_end":593,"column_start":12,"column_end":27},"name":"map_value_begin","qualname":"<RefMutStream>::map_value_begin","value":"pub fn map_value_begin(&mut Self) -> Result<&mut Self, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a map value.\n","sig":null,"attributes":[{"value":"*\n    Begin a map value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58799,"byte_end":58832,"line_start":589,"line_end":591,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58837,"byte_end":58846,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":59052,"byte_end":59066,"line_start":603,"line_end":603,"column_start":12,"column_end":26},"name":"seq_elem_begin","qualname":"<RefMutStream>::seq_elem_begin","value":"pub fn seq_elem_begin(&mut Self) -> Result<&mut Self, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a sequence element.\n","sig":null,"attributes":[{"value":"*\n    Begin a sequence element.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58986,"byte_end":59026,"line_start":599,"line_end":601,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":59031,"byte_end":59040,"line_start":602,"line_end":602,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":386},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stack","qualname":"::stream::stack","value":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":638},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":625},{"krate":0,"index":623},{"krate":0,"index":392},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":648},{"krate":0,"index":647},{"krate":0,"index":405},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":441},{"krate":0,"index":478}],"decl_id":null,"docs":"A fixed-size, stateful stack for streams.\n","sig":null,"attributes":[{"value":"*\nA fixed-size, stateful stack for streams.\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":63389,"byte_end":63437,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":63881,"byte_end":63884,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"Pos","qualname":"::stream::stack::Pos","value":"Pos {  }","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"decl_id":null,"docs":"The expected position in the stream.\n","sig":null,"attributes":[{"value":"*\nThe expected position in the stream.\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":63809,"byte_end":63852,"line_start":25,"line_end":27,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":620},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64104,"byte_end":64109,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"Depth","qualname":"::stream::stack::Depth","value":"","parent":null,"children":[],"decl_id":null,"docs":"The depth of a position.","sig":null,"attributes":[{"value":"*\nThe depth of a position.\n\nAll positions within a map or sequence are guaranteed\nto have the same depth or greater.\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":63922,"byte_end":64043,"line_start":34,"line_end":39,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64351,"byte_end":64357,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"is_key","qualname":"<Pos>::is_key","value":"pub fn is_key(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"    Whether the current position is a map key.\n","sig":null,"attributes":[{"value":"*\n    Whether the current position is a map key.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64268,"byte_end":64325,"line_start":51,"line_end":53,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64330,"byte_end":64339,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64519,"byte_end":64527,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"is_value","qualname":"<Pos>::is_value","value":"pub fn is_value(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"    Whether the current position is a map value.\n","sig":null,"attributes":[{"value":"*\n    Whether the current position is a map value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64434,"byte_end":64493,"line_start":59,"line_end":61,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64498,"byte_end":64507,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64696,"byte_end":64703,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"is_elem","qualname":"<Pos>::is_elem","value":"pub fn is_elem(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"    Whether the current position is a sequence element.\n","sig":null,"attributes":[{"value":"*\n    Whether the current position is a sequence element.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64604,"byte_end":64670,"line_start":67,"line_end":69,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64675,"byte_end":64684,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64867,"byte_end":64879,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"is_empty_map","qualname":"<Pos>::is_empty_map","value":"pub fn is_empty_map(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"    Whether the current position is an empty map.\n","sig":null,"attributes":[{"value":"*\n    Whether the current position is an empty map.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64781,"byte_end":64841,"line_start":75,"line_end":77,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64846,"byte_end":64855,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":65035,"byte_end":65047,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"is_empty_seq","qualname":"<Pos>::is_empty_seq","value":"pub fn is_empty_seq(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"    Whether the current position is an empty sequence.\n","sig":null,"attributes":[{"value":"*\n    Whether the current position is an empty sequence.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64944,"byte_end":65009,"line_start":83,"line_end":85,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":65014,"byte_end":65023,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":65180,"byte_end":65185,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"depth","qualname":"<Pos>::depth","value":"pub fn depth(&Self) -> Depth","parent":null,"children":[],"decl_id":null,"docs":"    The depth of this position.\n","sig":null,"attributes":[{"value":"*\n    The depth of this position.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":65112,"byte_end":65154,"line_start":91,"line_end":93,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":65159,"byte_end":65168,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":640},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":67987,"byte_end":67992,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"Stack","qualname":"::stream::stack::Stack","value":"Stack {  }","parent":null,"children":[{"krate":0,"index":641}],"decl_id":null,"docs":"A container for the stream state.","sig":null,"attributes":[{"value":"*\nA container for the stream state.\n\nImplementations of the [`Stream`](../trait.Stream.html) trait are encouraged to use a\nstack for validating their input.\n\nThe stack is stateful, and keeps track of open maps and sequences.\n\n# Validation\n\nA stack uses its state to validate the structure given to a stream and\nas a way for a flat, stateless stream to know what it's currently\nlooking at. The stack enforces:\n\n- Only a single root primitive, map or sequence is received.\n- Map keys and values are only received within a map.\n- Map keys are always received before map values, and every key has a corresponding value.\n- Sequence elements are only received within a sequence.\n- Every map and sequence is ended, and in the right order.\n- Every map key, map value, and sequence element is followed by valid data.\n\n# Depth\n\nBy default, stacks have a fixed depth (currently ~16, but this may change) so they can\nwork in no-std environments. Each call to `map_begin` or `seq_begin` will increase the\ncurrent depth. If this depth is exceeded then calls to `map_begin` or `seq_begin` will fail.\n\nThe fixed-depth limit can be removed by adding the `arbitrary-depth` feature to your `Cargo.toml`\n(this also requires the standard library):\n\n```toml,no_run\n[dependencies.sval]\nfeatures = [\"arbitrary-depth\"]\n```\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":66656,"byte_end":67958,"line_start":146,"line_end":180,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69203,"byte_end":69206,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"new","qualname":"<Stack>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"    Create a new stack.\n","sig":null,"attributes":[{"value":"*\n    Create a new stack.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69143,"byte_end":69177,"line_start":238,"line_end":240,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69182,"byte_end":69191,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69430,"byte_end":69435,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"clear","qualname":"<Stack>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"    Clear the stack so that it can be re-used.","sig":null,"attributes":[{"value":"*\n    Clear the stack so that it can be re-used.\n\n    Any state it currently contains will be lost.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69296,"byte_end":69404,"line_start":248,"line_end":252,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69409,"byte_end":69418,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69567,"byte_end":69574,"line_start":262,"line_end":262,"column_start":12,"column_end":19},"name":"current","qualname":"<Stack>::current","value":"pub fn current(&Self) -> Pos","parent":null,"children":[],"decl_id":null,"docs":"    Get the current position in the stack.\n","sig":null,"attributes":[{"value":"*\n    Get the current position in the stack.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69488,"byte_end":69541,"line_start":258,"line_end":260,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69546,"byte_end":69555,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69941,"byte_end":69950,"line_start":280,"line_end":280,"column_start":12,"column_end":21},"name":"primitive","qualname":"<Stack>::primitive","value":"pub fn primitive(&mut Self) -> Result<Pos, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Push a primitive.","sig":null,"attributes":[{"value":"*\n    Push a primitive.\n\n    A primitive is a simple value that isn't a map or sequence.\n    That includes:\n\n    - [`Arguments`](struct.Arguments.html)\n    - `u64`, `i64`, `u128`, `i128`\n    - `f64`\n    - `bool`\n    - `char`, `&str`\n    - `Option<T>`.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69655,"byte_end":69915,"line_start":266,"line_end":278,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69920,"byte_end":69929,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":70477,"byte_end":70486,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"map_begin","qualname":"<Stack>::map_begin","value":"pub fn map_begin(&mut Self) -> Result<Pos, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a new map.","sig":null,"attributes":[{"value":"*\n    Begin a new map.\n\n    The map must be completed by calling `map_end`.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":70367,"byte_end":70451,"line_start":296,"line_end":300,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":70456,"byte_end":70465,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":71249,"byte_end":71256,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"map_key","qualname":"<Stack>::map_key","value":"pub fn map_key(&mut Self) -> Result<Pos, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a map key.","sig":null,"attributes":[{"value":"*\n    Begin a map key.\n\n    The key will be implicitly completed by the value\n    that follows it.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":71116,"byte_end":71223,"line_start":323,"line_end":328,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":71228,"byte_end":71237,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":71890,"byte_end":71899,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"map_value","qualname":"<Stack>::map_value","value":"pub fn map_value(&mut Self) -> Result<Pos, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a map value.","sig":null,"attributes":[{"value":"*\n    Begin a map value.\n\n    The value will be implicitly completed by the value\n    that follows it.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":71753,"byte_end":71864,"line_start":347,"line_end":352,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":71869,"byte_end":71878,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":72391,"byte_end":72398,"line_start":374,"line_end":374,"column_start":12,"column_end":19},"name":"map_end","qualname":"<Stack>::map_end","value":"pub fn map_end(&mut Self) -> Result<Pos, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Complete the current map.\n","sig":null,"attributes":[{"value":"*\n    Complete the current map.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":72325,"byte_end":72365,"line_start":370,"line_end":372,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":72370,"byte_end":72379,"line_start":373,"line_end":373,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":73288,"byte_end":73297,"line_start":405,"line_end":405,"column_start":12,"column_end":21},"name":"seq_begin","qualname":"<Stack>::seq_begin","value":"pub fn seq_begin(&mut Self) -> Result<Pos, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a new sequence.","sig":null,"attributes":[{"value":"*\n    Begin a new sequence.\n\n    the sequence must be completed by calling `seq_end`.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":73168,"byte_end":73262,"line_start":399,"line_end":403,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":73267,"byte_end":73276,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":74073,"byte_end":74081,"line_start":433,"line_end":433,"column_start":12,"column_end":20},"name":"seq_elem","qualname":"<Stack>::seq_elem","value":"pub fn seq_elem(&mut Self) -> Result<Pos, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Begin a sequence element.","sig":null,"attributes":[{"value":"*\n    Begin a sequence element.\n\n    The element will be implicitly completed by the value\n    that follows it.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":73927,"byte_end":74047,"line_start":426,"line_end":431,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":74052,"byte_end":74061,"line_start":432,"line_end":432,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":74659,"byte_end":74666,"line_start":454,"line_end":454,"column_start":12,"column_end":19},"name":"seq_end","qualname":"<Stack>::seq_end","value":"pub fn seq_end(&mut Self) -> Result<Pos, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Complete the current sequence.\n","sig":null,"attributes":[{"value":"*\n    Complete the current sequence.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":74588,"byte_end":74633,"line_start":450,"line_end":452,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":74638,"byte_end":74647,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":75552,"byte_end":75559,"line_start":483,"line_end":483,"column_start":12,"column_end":19},"name":"can_end","qualname":"<Stack>::can_end","value":"pub fn can_end(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"    Whether or not the stack has seen a complete and valid stream.\n","sig":null,"attributes":[{"value":"*\n    Whether or not the stack has seen a complete and valid stream.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":75449,"byte_end":75526,"line_start":479,"line_end":481,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":75531,"byte_end":75540,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":75757,"byte_end":75760,"line_start":494,"line_end":494,"column_start":12,"column_end":15},"name":"end","qualname":"<Stack>::end","value":"pub fn end(&mut Self) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"    Complete the stack.","sig":null,"attributes":[{"value":"*\n    Complete the stack.\n\n    This stack may be re-used after being completed\n    by calling `begin`.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":75620,"byte_end":75731,"line_start":487,"line_end":492,"column_start":5,"column_end":7}},{"value":"inline","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":75736,"byte_end":75745,"line_start":493,"line_end":493,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":499},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":34532,"byte_end":34538,"line_start":515,"line_end":515,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518}],"decl_id":null,"docs":"A receiver for the structure of a value.","sig":null,"attributes":[{"value":"*\nA receiver for the structure of a value.\n\nThe `Stream` trait has a flat, stateless structure, but it may need to work with\nnested values. Implementations can use a [`Stack`] to track state for them.\n\nThe [`OwnedStream`] type is an ergonomic wrapper over a raw `Stream` that adds\nthe concept of [`Value`](../value/trait.Value.html)s.\n\n# Implementing `Stream`\n\nA stream may choose what kinds of structures it supports by selectively\nimplementing methods on the trait. Other methods default to returning\n[`Error::unsupported`]. Implementations may also choose to return\n`Error::unsupported` for other reasons.\n\n## Supporting primitives\n\nThe following stream can support any primitive value:\n\n```\n# struct MyStream;\nuse sval::stream::{self, Stream};\n\nimpl Stream for MyStream {\n    fn fmt(&mut self, args: stream::Arguments) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn i128(&mut self, v: i128) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn u128(&mut self, v: u128) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn f64(&mut self, v: f64) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn bool(&mut self, v: bool) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn str(&mut self, v: &str) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn none(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n}\n```\n\n## Supporting maps\n\nIn addition to the [methods needed for streaming primitives](#supporting-primitives),\na stream that supports maps needs to implement a few additional methods:\n\n```\n# struct MyStream;\nuse sval::stream::{self, Stream};\n\nimpl Stream for MyStream {\n    fn map_begin(&mut self, len: Option<usize>) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn map_key(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn map_value(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn map_end(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n}\n```\n\n## Supporting sequences\n\nIn addition to the [methods needed for streaming primitives](#supporting-primitives),\na stream that supports sequences needs to implement a few additional methods:\n\n```\n# struct MyStream;\nuse sval::stream::{self, Stream};\n\nimpl Stream for MyStream {\n    fn seq_begin(&mut self, len: Option<usize>) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn seq_elem(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn seq_end(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n}\n```\n\n## Supporting all structure\n\n```\n# struct MyStream;\nuse sval::stream::{self, Stream};\n\nimpl Stream for MyStream {\n    fn fmt(&mut self, args: stream::Arguments) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn error(&mut self, source: stream::Source) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn i128(&mut self, v: i128) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn u128(&mut self, v: u128) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn f64(&mut self, v: f64) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn bool(&mut self, v: bool) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn str(&mut self, v: &str) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn none(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn map_begin(&mut self, len: Option<usize>) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn map_key(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn map_value(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn map_end(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn seq_begin(&mut self, len: Option<usize>) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn seq_elem(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n\n    fn seq_end(&mut self) -> stream::Result {\n#       /*\n        ..\n#       */\n\n        Ok(())\n    }\n}\n```\n\n[`Value`]: ../trait.Value.html\n[`Error::unsupported`]: struct.Error.html#method.unsupported\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":29807,"byte_end":34521,"line_start":220,"line_end":514,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":34615,"byte_end":34618,"line_start":520,"line_end":520,"column_start":8,"column_end":11},"name":"fmt","qualname":"::stream::Stream::fmt","value":"pub fn fmt(&mut Self, Arguments) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream a debuggable type.\n","sig":null,"attributes":[{"value":"*\n    Stream a debuggable type.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":34545,"byte_end":34585,"line_start":516,"line_end":518,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":34590,"byte_end":34607,"line_start":519,"line_end":519,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":34873,"byte_end":34878,"line_start":531,"line_end":531,"column_start":8,"column_end":13},"name":"error","qualname":"::stream::Stream::error","value":"pub fn error(&mut Self, Source) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream an error.\n","sig":null,"attributes":[{"value":"*\n    Stream an error.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":34812,"byte_end":34843,"line_start":527,"line_end":529,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":34848,"byte_end":34865,"line_start":530,"line_end":530,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35139,"byte_end":35142,"line_start":542,"line_end":542,"column_start":8,"column_end":11},"name":"i64","qualname":"::stream::Stream::i64","value":"pub fn i64(&mut Self, i64) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream a signed integer.\n","sig":null,"attributes":[{"value":"*\n    Stream a signed integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35070,"byte_end":35109,"line_start":538,"line_end":540,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35114,"byte_end":35131,"line_start":541,"line_end":541,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35344,"byte_end":35347,"line_start":552,"line_end":552,"column_start":8,"column_end":11},"name":"u64","qualname":"::stream::Stream::u64","value":"pub fn u64(&mut Self, u64) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream an unsigned integer.\n","sig":null,"attributes":[{"value":"*\n    Stream an unsigned integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35272,"byte_end":35314,"line_start":548,"line_end":550,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35319,"byte_end":35336,"line_start":551,"line_end":551,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35553,"byte_end":35557,"line_start":562,"line_end":562,"column_start":8,"column_end":12},"name":"i128","qualname":"::stream::Stream::i128","value":"pub fn i128(&mut Self, i128) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream a 128bit signed integer.\n","sig":null,"attributes":[{"value":"*\n    Stream a 128bit signed integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35477,"byte_end":35523,"line_start":558,"line_end":560,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35528,"byte_end":35545,"line_start":561,"line_end":561,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35821,"byte_end":35825,"line_start":573,"line_end":573,"column_start":8,"column_end":12},"name":"u128","qualname":"::stream::Stream::u128","value":"pub fn u128(&mut Self, u128) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream a 128bit unsigned integer.\n","sig":null,"attributes":[{"value":"*\n    Stream a 128bit unsigned integer.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35743,"byte_end":35791,"line_start":569,"line_end":571,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":35796,"byte_end":35813,"line_start":572,"line_end":572,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36086,"byte_end":36089,"line_start":584,"line_end":584,"column_start":8,"column_end":11},"name":"f64","qualname":"::stream::Stream::f64","value":"pub fn f64(&mut Self, f64) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream a floating point value.\n","sig":null,"attributes":[{"value":"*\n    Stream a floating point value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36011,"byte_end":36056,"line_start":580,"line_end":582,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36061,"byte_end":36078,"line_start":583,"line_end":583,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36333,"byte_end":36337,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"bool","qualname":"::stream::Stream::bool","value":"pub fn bool(&mut Self, bool) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream a boolean.\n","sig":null,"attributes":[{"value":"*\n    Stream a boolean.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36271,"byte_end":36303,"line_start":591,"line_end":593,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36308,"byte_end":36325,"line_start":594,"line_end":594,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36595,"byte_end":36599,"line_start":606,"line_end":606,"column_start":8,"column_end":12},"name":"char","qualname":"::stream::Stream::char","value":"pub fn char(&mut Self, char) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream a unicode character.\n","sig":null,"attributes":[{"value":"*\n    Stream a unicode character.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36523,"byte_end":36565,"line_start":602,"line_end":604,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36570,"byte_end":36587,"line_start":605,"line_end":605,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36846,"byte_end":36849,"line_start":617,"line_end":617,"column_start":8,"column_end":11},"name":"str","qualname":"::stream::Stream::str","value":"pub fn str(&mut Self, &str) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream a UTF-8 string slice.\n","sig":null,"attributes":[{"value":"*\n    Stream a UTF-8 string slice.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36773,"byte_end":36816,"line_start":613,"line_end":615,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":36821,"byte_end":36838,"line_start":616,"line_end":616,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37100,"byte_end":37104,"line_start":628,"line_end":628,"column_start":8,"column_end":12},"name":"none","qualname":"::stream::Stream::none","value":"pub fn none(&mut Self) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Stream an empty value.\n","sig":null,"attributes":[{"value":"*\n    Stream an empty value.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37033,"byte_end":37070,"line_start":624,"line_end":626,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37075,"byte_end":37092,"line_start":627,"line_end":627,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37310,"byte_end":37319,"line_start":638,"line_end":638,"column_start":8,"column_end":17},"name":"map_begin","qualname":"::stream::Stream::map_begin","value":"pub fn map_begin(&mut Self, Option<usize>) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Begin a map.\n","sig":null,"attributes":[{"value":"*\n    Begin a map.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37253,"byte_end":37280,"line_start":634,"line_end":636,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37285,"byte_end":37302,"line_start":637,"line_end":637,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37676,"byte_end":37683,"line_start":651,"line_end":651,"column_start":8,"column_end":15},"name":"map_key","qualname":"::stream::Stream::map_key","value":"pub fn map_key(&mut Self) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Begin a map key.","sig":null,"attributes":[{"value":"*\n    Begin a map key.\n\n    The key will be implicitly ended by the stream methods that follow it.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37539,"byte_end":37646,"line_start":645,"line_end":649,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37651,"byte_end":37668,"line_start":650,"line_end":650,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37979,"byte_end":37988,"line_start":663,"line_end":663,"column_start":8,"column_end":17},"name":"map_value","qualname":"::stream::Stream::map_value","value":"pub fn map_value(&mut Self) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Begin a map value.","sig":null,"attributes":[{"value":"*\n    Begin a map value.\n\n    The value will be implicitly ended by the stream methods that follow it.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37838,"byte_end":37949,"line_start":657,"line_end":661,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":37954,"byte_end":37971,"line_start":662,"line_end":662,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":38202,"byte_end":38209,"line_start":673,"line_end":673,"column_start":8,"column_end":15},"name":"map_end","qualname":"::stream::Stream::map_end","value":"pub fn map_end(&mut Self) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    End a map.\n","sig":null,"attributes":[{"value":"*\n    End a map.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":38147,"byte_end":38172,"line_start":669,"line_end":671,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":38177,"byte_end":38194,"line_start":672,"line_end":672,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":38426,"byte_end":38435,"line_start":683,"line_end":683,"column_start":8,"column_end":17},"name":"seq_begin","qualname":"::stream::Stream::seq_begin","value":"pub fn seq_begin(&mut Self, Option<usize>) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Begin a sequence.\n","sig":null,"attributes":[{"value":"*\n    Begin a sequence.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":38364,"byte_end":38396,"line_start":679,"line_end":681,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":38401,"byte_end":38418,"line_start":682,"line_end":682,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":38805,"byte_end":38813,"line_start":696,"line_end":696,"column_start":8,"column_end":16},"name":"seq_elem","qualname":"::stream::Stream::seq_elem","value":"pub fn seq_elem(&mut Self) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    Begin a sequence element.","sig":null,"attributes":[{"value":"*\n    Begin a sequence element.\n\n    The element will be implicitly ended by the stream methods that follow it.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":38655,"byte_end":38775,"line_start":690,"line_end":694,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":38780,"byte_end":38797,"line_start":695,"line_end":695,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":39030,"byte_end":39037,"line_start":706,"line_end":706,"column_start":8,"column_end":15},"name":"seq_end","qualname":"::stream::Stream::seq_end","value":"pub fn seq_end(&mut Self) -> Result","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"    End a sequence.\n","sig":null,"attributes":[{"value":"*\n    End a sequence.\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":38970,"byte_end":39000,"line_start":702,"line_end":704,"column_start":5,"column_end":7}},{"value":"cfg(not(test))","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":39005,"byte_end":39022,"line_start":705,"line_end":705,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":540},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":40950,"byte_end":40956,"line_start":811,"line_end":811,"column_start":10,"column_end":16},"name":"Result","qualname":"::stream::Result","value":"crate::std::result::Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"The type returned by streaming methods.\n","sig":null,"attributes":[{"value":"*\nThe type returned by streaming methods.\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":40894,"byte_end":40940,"line_start":808,"line_end":810,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":541},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::value","value":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/mod.rs","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":607}],"decl_id":null,"docs":"A streamable value.","sig":null,"attributes":[{"value":"*\nA streamable value.\n\n# The `Value` trait\n\nA [`Value`] is a type that has structure, like a number, string, map, or sequence.\n\n## Deriving `Value`\n\nUse the `derive` Cargo feature to support automatic implementations of the `Value` trait:\n\n```toml,ignore\n[dependencies.sval]\nfeatures = [\"derive\"]\n```\n\nThen derive the `Value` for struct-like datastructures:\n\n```\n# fn main() {}\n# #[cfg(all(feature = \"std\", feature = \"derive\"))]\n# mod test {\nuse sval::Value;\n\n#[derive(Value)]\npub struct Data {\n    id: u32,\n    title: String,\n}\n# }\n```\n\nThe trait can also be implemented manually:\n\n```\nuse sval::value::{self, Value};\n\npub struct Id(u64);\n\nimpl Value for Id {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.u64(self.0)\n    }\n}\n```\n\n## Sequences\n\nA sequence can be visited by iterating over its elements:\n\n```\nuse sval::value::{self, Value};\n\npub struct Seq(Vec<u64>);\n\nimpl Value for Seq {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.seq_begin(Some(self.0.len()))?;\n\n        for v in &self.0 {\n            stream.seq_elem(v)?;\n        }\n\n        stream.seq_end()\n    }\n}\n```\n\n## Maps\n\nA map can be visited by iterating over its key-value pairs:\n\n```\n# fn main() {}\n# #[cfg(feature = \"std\")]\n# mod test {\nuse std::collections::BTreeMap;\nuse sval::value::{self, Value};\n\npub struct Map(BTreeMap<String, u64>);\n\nimpl Value for Map {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.map_begin(Some(self.0.len()))?;\n\n        for (k, v) in &self.0 {\n            stream.map_key(k)?;\n            stream.map_value(v)?;\n        }\n\n        stream.map_end()\n    }\n}\n# }\n```\n\n## Structure that isn't known upfront\n\nTypes can stream a structure that's different than what they use internally.\nIn the following example, the `Map` type doesn't have any keys or values,\nbut serializes a nested map like `{\"nested\": {\"key\": 42}}`:\n\n```\nuse sval::value::{self, Value};\n\npub struct Map;\n\nimpl Value for Map {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.map_begin(Some(1))?;\n\n        stream.map_key_begin()?.str(\"nested\")?;\n        stream.map_value_begin()?.map_begin(Some(1))?;\n        stream.map_key_begin()?.str(\"key\")?;\n        stream.map_value_begin()?.u64(42)?;\n        stream.map_end()?;\n\n        stream.map_end()\n    }\n}\n```\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/mod.rs","byte_start":90423,"byte_end":92788,"line_start":1,"line_end":122,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":601},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/mod.rs","byte_start":97986,"byte_end":97991,"line_start":353,"line_end":353,"column_start":11,"column_end":16},"name":"Value","qualname":"::value::Value","value":"Value","parent":null,"children":[{"krate":0,"index":602}],"decl_id":null,"docs":"A value with a streamable structure.","sig":null,"attributes":[{"value":"*\nA value with a streamable structure.\n\n# Implementing `Value`\n\nImplementations of `Value` are expected to conform to the following\nmodel:\n\n## Only a single primitive, map or sequence is streamed\n\nThe following `Value` is valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        // VALID: The stream can take the primitive\n        // value 42\n        stream.any(42)\n    }\n}\n```\n\nThe following `Value` is not valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.any(42)?;\n\n        // INVALID: The stream already received the\n        // primitive value 42\n        stream.any(43)\n    }\n}\n```\n\n## All maps and sequences are completed, and in the right order\n\nThe following `Value` is valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.map_begin(None)?;\n        stream.map_key(\"a\")?;\n        stream.map_value_begin()?.seq_begin(None)?;\n\n        // VALID: The sequence is completed, then the map is completed\n        stream.seq_end()?;\n        stream.map_end()\n    }\n}\n```\n\nThe following `Value` is not valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.map_begin(None)?;\n        stream.map_key(\"a\")?;\n        stream.map_value_begin()?.seq_begin(None)?;\n\n        // INVALID: The map is completed before the sequence,\n        // even though the sequence was started last.\n        stream.map_end()?;\n        stream.seq_end()\n    }\n}\n```\n\nThe following `Value` is not valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.map_begin(None)?;\n\n        // INVALID: The map is never completed\n        Ok(())\n    }\n}\n```\n\n## Map keys and values are received before their corresponding structure\n\nThe following `Value` is valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.map_begin(None)?;\n\n        // VALID: The `map_key` and `map_value` methods\n        // always call the underlying stream correctly\n        stream.map_key(\"a\")?;\n        stream.map_value(\"b\")?;\n\n        // VALID: `map_key` and `map_value` are called before\n        // their actual values are given\n        stream.map_key_begin()?.any(\"c\")?;\n        stream.map_value_begin()?.any(\"d\")?;\n\n        stream.map_end()\n    }\n}\n```\n\nThe following `Value` is not valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.map_begin(None)?;\n\n        // INVALID: The underlying `map_key` and `map_value` methods\n        // aren't being called before their actual values are given\n        stream.any(\"a\")?;\n        stream.any(\"b\")?;\n\n        stream.map_end()\n    }\n}\n```\n\n## Map keys are received before values\n\nThe following `Value` is valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.map_begin(None)?;\n\n        // VALID: The key is streamed before the value\n        stream.map_key(\"a\")?;\n        stream.map_value(\"b\")?;\n\n        stream.map_end()\n    }\n}\n```\n\nThe following `Value` is not valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.map_begin(None)?;\n\n        // INVALID: The value is streamed before the key\n        stream.map_value(\"b\")?;\n        stream.map_key(\"a\")?;\n\n        stream.map_end()\n    }\n}\n```\n\n## Sequence elements are received before their corresponding structure\n\nThe following `Value` is valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.seq_begin(None)?;\n\n        // VALID: The `seq_elem` method\n        // always calls the underlying stream correctly\n        stream.seq_elem(\"a\")?;\n\n        // VALID: `seq_elem` is called before\n        // their actual values are given\n        stream.seq_elem_begin()?.any(\"b\")?;\n\n        stream.seq_end()\n    }\n}\n```\n\nThe following `Value` is not valid:\n\n```\n# use sval::value::{self, Value};\n# struct MyValue;\nimpl Value for MyValue {\n    fn stream(&self, stream: &mut value::Stream) -> value::Result {\n        stream.seq_begin(None)?;\n\n        // INVALID: The underlying `seq_elem` method\n        // isn't being called before the actual value is given\n        stream.any(\"a\")?;\n\n        stream.seq_end()\n    }\n}\n```\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/mod.rs","byte_start":92959,"byte_end":97975,"line_start":134,"line_end":352,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/mod.rs","byte_start":99361,"byte_end":99367,"line_start":406,"line_end":406,"column_start":8,"column_end":14},"name":"stream","qualname":"::value::Value::stream","value":"pub fn stream(&Self, &mut Stream) -> Result","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":"    Stream this value.","sig":null,"attributes":[{"value":"*\n    Stream this value.\n\n    # Examples\n\n    Use a [`stream::OwnedStream`] to stream a value:\n\n    ```no_run\n    # #[cfg(not(feature = \"std\"))]\n    # fn main() {}\n    # #[cfg(feature = \"std\")]\n    # fn main() -> Result<(), Box<dyn std::error::Error>> {\n    use sval::stream::OwnedStream;\n\n    let mut stream = OwnedStream::new(MyStream);\n    stream.any(42)?;\n    # Ok(())\n    # }\n    # use sval::stream::{self, Stream};\n    # struct MyStream;\n    # impl Stream for MyStream {\n    #     fn fmt(&mut self, _: stream::Arguments) -> stream::Result { unimplemented!() }\n    # }\n    ```\n\n    It's less convenient, but the `stream` method can be called directly\n    instead of using `OwnedStream.any`:\n\n    ```no_run\n    # #[cfg(not(feature = \"std\"))]\n    # fn main() {}\n    # #[cfg(feature = \"std\")]\n    # fn main() -> Result<(), Box<dyn std::error::Error>> {\n    use sval::{\n        stream::OwnedStream,\n        value::Value,\n    };\n\n    let mut stream = OwnedStream::new(MyStream);\n    42.stream(&mut stream.borrow_mut())?;\n    # Ok(())\n    # }\n    # use sval::stream::{self, Stream};\n    # struct MyStream;\n    # impl Stream for MyStream {\n    #     fn fmt(&mut self, _: stream::Arguments) -> stream::Result { unimplemented!() }\n    # }\n    ```\n\n    [`sval::stream`]: ../fn.stream.html\n    [`stream::OwnedStream`]: ../stream/struct.OwnedStream.html\n    */","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/mod.rs","byte_start":97998,"byte_end":99353,"line_start":354,"line_end":405,"column_start":5,"column_end":7}}]},{"kind":"Type","id":{"krate":0,"index":607},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/mod.rs","byte_start":99633,"byte_end":99639,"line_start":422,"line_end":422,"column_start":10,"column_end":16},"name":"Result","qualname":"::value::Result","value":"crate::std::result::Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"The type returned by streaming methods.\n","sig":null,"attributes":[{"value":"*\nThe type returned by streaming methods.\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/mod.rs","byte_start":99577,"byte_end":99623,"line_start":419,"line_end":421,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":612},"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":6735,"byte_end":6741,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"stream","qualname":"::stream","value":"pub fn stream<S, impl Value: Value>(S, impl Value) -> Result<S, Error> where\nS: Stream","parent":null,"children":[],"decl_id":null,"docs":"Stream the structure of a [`Value`] using the given [`Stream`].","sig":null,"attributes":[{"value":"*\nStream the structure of a [`Value`] using the given [`Stream`].\n\nThis method is a convenient way of calling [`OwnedStream::stream`](stream/struct.OwnedStream.html#method.stream).\n*/","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":6542,"byte_end":6727,"line_start":315,"line_end":319,"column_start":1,"column_end":3}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8135,"byte_end":8140,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":9361,"byte_end":9366,"line_start":72,"line_end":72,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":9481,"byte_end":9486,"line_start":78,"line_end":78,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":9976,"byte_end":9986,"line_start":101,"line_end":101,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":10773,"byte_end":10783,"line_start":125,"line_end":125,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":11479,"byte_end":11484,"line_start":145,"line_end":145,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":11681,"byte_end":11686,"line_start":157,"line_end":157,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/owned.rs","byte_start":18309,"byte_end":18321,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/owned.rs","byte_start":21651,"byte_end":21664,"line_start":170,"line_end":170,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/owned.rs","byte_start":23840,"byte_end":23853,"line_start":273,"line_end":273,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/value.rs","byte_start":24754,"byte_end":24759,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/mod.rs","byte_start":15614,"byte_end":15621,"line_start":71,"line_end":71,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/mod.rs","byte_start":16071,"byte_end":16078,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/error.rs","byte_start":42904,"byte_end":42910,"line_start":31,"line_end":31,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/error.rs","byte_start":43211,"byte_end":43217,"line_start":45,"line_end":45,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":45635,"byte_end":45644,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46432,"byte_end":46441,"line_start":42,"line_end":42,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46583,"byte_end":46592,"line_start":48,"line_end":48,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46737,"byte_end":46746,"line_start":54,"line_end":54,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46879,"byte_end":46888,"line_start":60,"line_end":60,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":47173,"byte_end":47182,"line_start":70,"line_end":70,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":47999,"byte_end":48010,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52320,"byte_end":52331,"line_start":251,"line_end":251,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52939,"byte_end":52950,"line_start":286,"line_end":286,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":54906,"byte_end":54918,"line_start":388,"line_end":388,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58595,"byte_end":58607,"line_start":578,"line_end":578,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":59196,"byte_end":59208,"line_start":610,"line_end":610,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64258,"byte_end":64261,"line_start":50,"line_end":50,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":65384,"byte_end":65393,"line_start":108,"line_end":108,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":68069,"byte_end":68073,"line_start":189,"line_end":189,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69062,"byte_end":69067,"line_start":231,"line_end":231,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69131,"byte_end":69136,"line_start":237,"line_end":237,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":76242,"byte_end":76247,"line_start":511,"line_end":511,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":78434,"byte_end":78439,"line_start":613,"line_end":613,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/impls.rs","byte_start":100496,"byte_end":100502,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/impls.rs","byte_start":103461,"byte_end":103470,"line_start":167,"line_end":167,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/impls.rs","byte_start":103623,"byte_end":103632,"line_start":174,"line_end":174,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/impls.rs","byte_start":103784,"byte_end":103790,"line_start":181,"line_end":181,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":5303,"byte_end":5309,"line_start":250,"line_end":250,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":6420,"byte_end":6426,"line_start":304,"line_end":304,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":198}},{"kind":"Mod","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/mod.rs","byte_start":29659,"byte_end":29664,"line_start":208,"line_end":208,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":386}},{"kind":"Mod","span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/lib.rs","byte_start":6436,"byte_end":6441,"line_start":305,"line_end":305,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":541}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":8135,"byte_end":8140,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":12},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":9361,"byte_end":9366,"line_start":72,"line_end":72,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":12},"to":{"krate":1,"index":6922}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":9481,"byte_end":9486,"line_start":78,"line_end":78,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":12},"to":{"krate":1,"index":6927}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":9976,"byte_end":9986,"line_start":101,"line_end":101,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":26},"to":{"krate":1,"index":6922}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":10773,"byte_end":10783,"line_start":125,"line_end":125,"column_start":23,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":26},"to":{"krate":1,"index":6927}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":11479,"byte_end":11484,"line_start":145,"line_end":145,"column_start":27,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/error.rs","byte_start":11681,"byte_end":11686,"line_start":157,"line_end":157,"column_start":10,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":12},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/owned.rs","byte_start":18309,"byte_end":18321,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/owned.rs","byte_start":21651,"byte_end":21664,"line_start":170,"line_end":170,"column_start":10,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/owned.rs","byte_start":23840,"byte_end":23853,"line_start":273,"line_end":273,"column_start":10,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/value.rs","byte_start":24754,"byte_end":24759,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/mod.rs","byte_start":14900,"byte_end":14906,"line_start":38,"line_end":38,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":499},"to":{"krate":0,"index":158}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/mod.rs","byte_start":15614,"byte_end":15621,"line_start":71,"line_end":71,"column_start":21,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":168},"to":{"krate":0,"index":158}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/collect/mod.rs","byte_start":16071,"byte_end":16078,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":168},"to":{"krate":0,"index":499}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/error.rs","byte_start":42904,"byte_end":42910,"line_start":31,"line_end":31,"column_start":25,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":201},"to":{"krate":1,"index":6922}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/error.rs","byte_start":43211,"byte_end":43217,"line_start":45,"line_end":45,"column_start":27,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":201},"to":{"krate":1,"index":6927}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":45635,"byte_end":45644,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46432,"byte_end":46441,"line_start":42,"line_end":42,"column_start":39,"column_end":48},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":212},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46583,"byte_end":46592,"line_start":48,"line_end":48,"column_start":39,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":212},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46737,"byte_end":46746,"line_start":54,"line_end":54,"column_start":41,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":212},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":46879,"byte_end":46888,"line_start":60,"line_end":60,"column_start":25,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":212},"to":{"krate":1,"index":6922}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/fmt.rs","byte_start":47173,"byte_end":47182,"line_start":70,"line_end":70,"column_start":27,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":212},"to":{"krate":1,"index":6927}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":47999,"byte_end":48010,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52320,"byte_end":52331,"line_start":251,"line_end":251,"column_start":9,"column_end":20},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":52939,"byte_end":52950,"line_start":286,"line_end":286,"column_start":20,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":262},"to":{"krate":0,"index":499}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":54906,"byte_end":54918,"line_start":388,"line_end":388,"column_start":10,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":58595,"byte_end":58607,"line_start":578,"line_end":578,"column_start":10,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/owned.rs","byte_start":59196,"byte_end":59208,"line_start":610,"line_end":610,"column_start":21,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":326},"to":{"krate":0,"index":499}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":64258,"byte_end":64261,"line_start":50,"line_end":50,"column_start":6,"column_end":9},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":65384,"byte_end":65393,"line_start":108,"line_end":108,"column_start":23,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":399},"to":{"krate":1,"index":6927}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":68069,"byte_end":68073,"line_start":189,"line_end":189,"column_start":6,"column_end":10},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69062,"byte_end":69067,"line_start":231,"line_end":231,"column_start":18,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":2067}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":69131,"byte_end":69136,"line_start":237,"line_end":237,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":76242,"byte_end":76247,"line_start":511,"line_end":511,"column_start":17,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":640},"to":{"krate":0,"index":499}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/stream/stack.rs","byte_start":78434,"byte_end":78439,"line_start":613,"line_end":613,"column_start":10,"column_end":15},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/impls.rs","byte_start":100496,"byte_end":100502,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":1,"index":34619},"to":{"krate":0,"index":601}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/impls.rs","byte_start":103461,"byte_end":103470,"line_start":167,"line_end":167,"column_start":25,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":1,"index":35669},"to":{"krate":0,"index":601}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/impls.rs","byte_start":103623,"byte_end":103632,"line_start":174,"line_end":174,"column_start":28,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":212},"to":{"krate":0,"index":601}},{"span":{"file_name":"/home/gstalker/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/sval-1.0.0-alpha.5/src/value/impls.rs","byte_start":103784,"byte_end":103790,"line_start":181,"line_end":181,"column_start":28,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":201},"to":{"krate":0,"index":601}}]}